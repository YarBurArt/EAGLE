"""fix mythic tables

Revision ID: 2b58840b3900
Revises: 86981bc09690
Create Date: 2025-07-31 13:17:57.701270

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2b58840b3900'
down_revision = '86981bc09690'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agent', sa.Column('agent_name', sa.String(length=256), nullable=False))
    op.add_column('agent', sa.Column('os_type', sa.String(length=64), nullable=False))
    op.add_column('agent', sa.Column('status', sa.String(length=64), nullable=False))
    op.add_column('agent', sa.Column('callback_display_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('agent_role_key'), 'agent', type_='unique')
    op.create_unique_constraint(None, 'agent', ['agent_name'])
    op.drop_column('agent', 'role')
    op.add_column('attack_chain', sa.Column('chain_name', sa.String(length=256), nullable=False))
    op.add_column('attack_chain', sa.Column('final_status', sa.String(length=64), nullable=False))
    op.create_unique_constraint(None, 'attack_chain', ['chain_name'])
    op.add_column('attack_step', sa.Column('phase', sa.String(length=64), nullable=False))
    op.add_column('attack_step', sa.Column('tool_name', sa.String(length=64), nullable=False))
    op.add_column('attack_step', sa.Column('command', sa.Text(), nullable=False))
    op.add_column('attack_step', sa.Column('mythic_task_id', sa.Integer(), nullable=False))
    op.add_column('attack_step', sa.Column('mythic_payload_uuid', sa.Uuid(as_uuid=False), nullable=False))
    op.add_column('attack_step', sa.Column('mythic_payload_id', sa.Integer(), nullable=False))
    op.add_column('attack_step', sa.Column('raw_log', sa.Text(), nullable=True))
    op.add_column('attack_step', sa.Column('status', sa.String(length=64), nullable=False))
    op.add_column('attack_step', sa.Column('executed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('user_account', 'username',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('user_account', 'role',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.drop_constraint(op.f('user_account_role_key'), 'user_account', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('user_account_role_key'), 'user_account', ['role'], postgresql_nulls_not_distinct=False)
    op.alter_column('user_account', 'role',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('user_account', 'username',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
    op.drop_column('attack_step', 'executed_at')
    op.drop_column('attack_step', 'status')
    op.drop_column('attack_step', 'raw_log')
    op.drop_column('attack_step', 'mythic_payload_id')
    op.drop_column('attack_step', 'mythic_payload_uuid')
    op.drop_column('attack_step', 'mythic_task_id')
    op.drop_column('attack_step', 'command')
    op.drop_column('attack_step', 'tool_name')
    op.drop_column('attack_step', 'phase')
    op.drop_constraint(None, 'attack_chain', type_='unique')
    op.drop_column('attack_chain', 'final_status')
    op.drop_column('attack_chain', 'chain_name')
    op.add_column('agent', sa.Column('role', sa.VARCHAR(length=64), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'agent', type_='unique')
    op.create_unique_constraint(op.f('agent_role_key'), 'agent', ['role'], postgresql_nulls_not_distinct=False)
    op.drop_column('agent', 'callback_display_id')
    op.drop_column('agent', 'status')
    op.drop_column('agent', 'os_type')
    op.drop_column('agent', 'agent_name')
    # ### end Alembic commands ###
